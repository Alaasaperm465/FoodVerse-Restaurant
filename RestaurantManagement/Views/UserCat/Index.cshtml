@model IEnumerable<RestaurantManagement.Models.Category>

@{
    ViewData["Title"] = "Our Menu Categories";
}

<style>
    .categories-section {
        background: linear-gradient(135deg, #f9f5f0 0%, #ffffff 100%);
        min-height: calc(100vh - 80px);
        padding: 60px 0;
        margin-top: -30px;
    }

    .page-title {
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        color: var(--primary);
        text-align: center;
        margin-bottom: 50px;
        font-size: 2.8rem;
    }

    .categories-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 30px;
        margin-bottom: 50px;
    }

    .category-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: none;
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }

        .category-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .category-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        }

    .card-body {
        padding: 30px 25px;
        text-align: center;
    }

    .category-icon {
        font-size: 2.5rem;
        color: var(--primary);
        margin-bottom: 15px;
        display: block;
    }

    .category-name {
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 15px;
        font-size: 1.4rem;
    }

    .category-description {
        color: #666;
        line-height: 1.6;
        margin-bottom: 20px;
        font-size: 0.95rem;
    }

    .btn-view-items {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
        border: none;
        border-radius: 12px;
        padding: 12px 25px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        width: 100%;
    }

        .btn-view-items:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(197, 45, 47, 0.3);
            color: white;
        }

    .btn-disabled {
        background: #6c757d;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 12px 25px;
        font-weight: 500;
        width: 100%;
        opacity: 0.6;
        cursor: not-allowed;
    }

    .status-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-active {
        background: rgba(25, 135, 84, 0.1);
        color: #198754;
        border: 1px solid rgba(25, 135, 84, 0.2);
    }

    .status-inactive {
        background: rgba(108, 117, 125, 0.1);
        color: #6c757d;
        border: 1px solid rgba(108, 117, 125, 0.2);
    }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        color: #666;
    }

    .empty-icon {
        font-size: 4rem;
        color: #ddd;
        margin-bottom: 20px;
        display: block;
    }

    /* Category Icons */
    .icon-appetizers {
        color: #0dcaf0;
    }

    .icon-main-course {
        color: #198754;
    }

    .icon-desserts {
        color: #ffc107;
    }

    .icon-drinks {
        color: #0d6efd;
    }

    .icon-salads {
        color: #20c997;
    }

    .icon-specials {
        color: #dc3545;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .categories-grid {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .page-title {
            font-size: 2.2rem;
        }

        .card-body {
            padding: 25px 20px;
        }
    }

    @@media (max-width: 576px) {
        .categories-grid {
            grid-template-columns: 1fr;
        }

        .page-title {
            font-size: 2rem;
        }
    }

    /* Animation */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .category-card {
        animation: fadeInUp 0.6s ease-out;
    }
</style>

<section class="categories-section">
    <div class="container">
        <h1 class="page-title">
            <i class="fas fa-layer-group me-3"></i>Explore Our Menu Categories
        </h1>

        @if (Model.Any())
        {
            <div class="categories-grid">
                @foreach (var item in Model.Where(c => c.IsActive && !c.IsDeleted))
                {
                    <div class="category-card">
                        <span class="status-badge status-active">
                            <i class="fas fa-check-circle me-1"></i>Active
                        </span>

                        <div class="card-body">
                            <i class="fas @GetCategoryIcon(item.Name) category-icon"></i>

                            <h3 class="category-name">@item.Name</h3>

                            <p class="category-description">
                                @(string.IsNullOrEmpty(item.Description) ? "Discover our delicious selection of " + item.Name : item.Description)
                            </p>

                            <a asp-action="Items" asp-route-id="@item.Id" class="btn-view-items">
                                <i class="fas fa-utensils me-2"></i>View Items
                            </a>
                        </div>
                    </div>
                }

                @foreach (var item in Model.Where(c => !c.IsActive || c.IsDeleted))
                {
                    <div class="category-card">
                        <span class="status-badge status-inactive">
                            <i class="fas fa-times-circle me-1"></i>Inactive
                        </span>

                        <div class="card-body">
                            <i class="fas @GetCategoryIcon(item.Name) category-icon"></i>

                            <h3 class="category-name">@item.Name</h3>

                            <p class="category-description">
                                @(string.IsNullOrEmpty(item.Description) ? "Temporarily unavailable" : item.Description)
                            </p>

                            <button class="btn-disabled" disabled>
                                <i class="fas fa-clock me-2"></i>Coming Soon
                            </button>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-inbox empty-icon"></i>
                <h3>No Categories Available</h3>
                <p class="text-muted">We're currently updating our menu categories. Please check back later!</p>
            </div>
        }
    </div>
</section>

@functions {
    public string GetCategoryIcon(string categoryName)
    {
        if (string.IsNullOrEmpty(categoryName))
            return "fa-utensils";

        return categoryName.ToLower() switch
        {
            var name when name.Contains("appetizer") || name.Contains("starter") => "fa-leaf icon-appetizers",
            var name when name.Contains("main") || name.Contains("course") || name.Contains("entree") => "fa-utensils icon-main-course",
            var name when name.Contains("dessert") || name.Contains("sweet") => "fa-ice-cream icon-desserts",
            var name when name.Contains("drink") || name.Contains("beverage") || name.Contains("juice") => "fa-glass-martini icon-drinks",
            var name when name.Contains("salad") => "fa-seedling icon-salads",
            var name when name.Contains("special") || name.Contains("chef") => "fa-star icon-specials",
            _ => "fa-utensils"
        };
    }
}