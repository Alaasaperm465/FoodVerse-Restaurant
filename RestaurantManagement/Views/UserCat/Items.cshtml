@model IEnumerable<RestaurantManagement.Models.MenuItem>

@{
    ViewData["Title"] = "Menu Items";
    var categoryName = ViewBag.CategoryName as string;
}

<style>
    .menu-items-section {
        background: linear-gradient(135deg, #f9f5f0 0%, #ffffff 100%);
        min-height: calc(100vh - 80px);
        padding: 60px 0;
        margin-top: -30px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 50px;
        padding: 0 15px;
    }

    .category-title {
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 15px;
        font-size: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
    }

    .category-subtitle {
        color: #666;
        font-size: 1.1rem;
        max-width: 600px;
        margin: 0 auto;
    }

    .items-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 30px;
        margin-bottom: 50px;
    }

    .menu-card {
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        border: none;
        transition: all 0.3s ease;
        overflow: hidden;
        position: relative;
    }

        .menu-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

    .card-image {
        height: 200px;
        width: 100%;
        object-fit: cover;
        border-bottom: 3px solid #f0f0f0;
    }

    .image-placeholder {
        height: 200px;
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        display: flex;
        align-items: center;
        justify-content: center;
        color: #6c757d;
        font-size: 2rem;
        border-bottom: 3px solid #f0f0f0;
    }

    .card-body {
        padding: 25px;
        text-align: center;
    }

    .item-name {
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        color: var(--dark);
        margin-bottom: 10px;
        font-size: 1.3rem;
        line-height: 1.3;
    }

    .item-description {
        color: #666;
        line-height: 1.5;
        margin-bottom: 15px;
        font-size: 0.9rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .item-price {
        font-weight: 700;
        color: var(--primary);
        font-size: 1.4rem;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
    }

        .item-price::before {
            content: '$';
            font-size: 1rem;
            color: #198754;
        }

    .btn-order {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
        border: none;
        border-radius: 12px;
        padding: 12px 25px;
        font-weight: 600;
        text-decoration: none;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        width: 100%;
        justify-content: center;
    }

        .btn-order:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(197, 45, 47, 0.3);
            color: white;
        }

    .btn-disabled {
        background: #6c757d;
        color: white;
        border: none;
        border-radius: 12px;
        padding: 12px 25px;
        font-weight: 500;
        width: 100%;
        opacity: 0.6;
        cursor: not-allowed;
    }

    .status-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        z-index: 2;
    }

    .status-available {
        background: rgba(25, 135, 84, 0.1);
        color: #198754;
        border: 1px solid rgba(25, 135, 84, 0.2);
    }

    .status-unavailable {
        background: rgba(108, 117, 125, 0.1);
        color: #6c757d;
        border: 1px solid rgba(108, 117, 125, 0.2);
    }

    .preparation-time {
        position: absolute;
        top: 15px;
        left: 15px;
        background: rgba(255, 255, 255, 0.9);
        padding: 4px 8px;
        border-radius: 15px;
        font-size: 0.7rem;
        font-weight: 600;
        color: #666;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        color: #666;
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        max-width: 500px;
        margin: 0 auto;
    }

    .empty-icon {
        font-size: 4rem;
        color: #ddd;
        margin-bottom: 20px;
        display: block;
    }

    .stock-info {
        margin-top: 10px;
        font-size: 0.8rem;
        color: #666;
    }

    .stock-low {
        color: #dc3545;
        font-weight: 600;
    }

    .stock-good {
        color: #198754;
        font-weight: 600;
    }

    /* Responsive  */
    @@media (max-width: 768px) {
        .items-grid {
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
        }

        .category-title {
            font-size: 2rem;
        }

        .card-body {
            padding: 20px;
        }
    }

    @@media (max-width: 576px) {
        .items-grid {
            grid-template-columns: 1fr;
        }

        .category-title {
            font-size: 1.8rem;
        }
    }

    /* Animation */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .menu-card {
        animation: fadeInUp 0.6s ease-out;
    }
</style>

<section class="menu-items-section">
    <div class="container">
        <div class="page-header">
            <h1 class="category-title">
                <i class="fas fa-utensils"></i>@categoryName
            </h1>
            <p class="category-subtitle">
                Discover our delicious selection of @categoryName.ToLower() items, carefully prepared with the finest ingredients
            </p>
        </div>

        @if (!Model.Any())
        {
            <div class="empty-state">
                <i class="fas fa-utensils empty-icon"></i>
                <h3>No Items Available</h3>
                <p class="text-muted">We're currently updating our menu for this category. Please check back later!</p>
                <a asp-controller="Category" asp-action="Index" class="btn-order" style="max-width: 200px; margin-top: 20px;">
                    <i class="fas fa-arrow-left me-2"></i>Back to Categories
                </a>
            </div>
        }
        else
        {
            <div class="items-grid">
                @foreach (var item in Model.Where(m => m.IsAvailable && !m.IsDeleted))
                {
                    <div class="menu-card">
                        <!-- Status Badge -->
                        <span class="status-badge status-available">
                            <i class="fas fa-check-circle me-1"></i>Available
                        </span>

                        <!-- Preparation Time -->
                        @if (item.PreparationTime > 0)
                        {
                            <div class="preparation-time">
                                <i class="fas fa-clock"></i>@item.PreparationTime min
                            </div>
                        }

                        <!-- Item Image -->
                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" class="card-image" alt="@item.Name" />
                        }
                        else
                        {
                            <div class="image-placeholder">
                                <i class="fas fa-utensils"></i>
                            </div>
                        }

                        <!-- Card Body -->
                        <div class="card-body">
                            <h3 class="item-name">@item.Name</h3>

                            <p class="item-description">
                                @(string.IsNullOrEmpty(item.Description) ? "A delicious addition to your meal" : item.Description)
                            </p>

                            <div class="item-price">@item.Price.ToString("0.00")</div>

                            <!-- Stock Information -->
                            @if (item.Instoke <= 10 && item.Instoke > 0)
                            {
                                <div class="stock-info stock-low">
                                    <i class="fas fa-exclamation-triangle me-1"></i>
                                    Only @item.Instoke left in stock!
                                </div>
                            }
                            else if (item.Instoke > 10)
                            {
                                <div class="stock-info stock-good">
                                    <i class="fas fa-check-circle me-1"></i>
                                    In stock
                                </div>
                            }

                            <a asp-controller="Order" asp-action="AddToCart" asp-route-id="@item.Id" class="btn-order">
                                <i class="fas fa-shopping-cart me-2"></i>Add to Order
                            </a>
                        </div>
                    </div>
                }

                @foreach (var item in Model.Where(m => !m.IsAvailable || m.IsDeleted))
                {
                    <div class="menu-card">
                        <span class="status-badge status-unavailable">
                            <i class="fas fa-times-circle me-1"></i>Unavailable
                        </span>

                        @if (!string.IsNullOrEmpty(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" class="card-image" alt="@item.Name" style="opacity: 0.6;" />
                        }
                        else
                        {
                            <div class="image-placeholder" style="opacity: 0.6;">
                                <i class="fas fa-utensils"></i>
                            </div>
                        }

                        <!-- Card Body -->
                        <div class="card-body">
                            <h3 class="item-name" style="opacity: 0.7;">@item.Name</h3>

                            <p class="item-description" style="opacity: 0.7;">
                                @(string.IsNullOrEmpty(item.Description) ? "Currently unavailable" : item.Description)
                            </p>

                            <div class="item-price" style="opacity: 0.7;">@item.Price.ToString("0.00")</div>

                            <button class="btn-disabled" disabled>
                                <i class="fas fa-clock me-2"></i>Coming Soon
                            </button>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</section>